name: GitHub Org Member Contribution Action (Last 15 minutes)

on:
  schedule:
    - cron: '*/15 * * * *'  # Run every 15 minutes (cron syntax)
  workflow_dispatch:  # Allows manual trigger

jobs:
  fetch_contributions:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository (optional if needed for context)
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Get Organization Repositories
      - name: Get Organization Repositories
        id: get_repos
        run: |
          ORGANIZATION="Actions-org"
          echo "Fetching repositories for organization..."
          curl -H "Authorization: token ${{ secrets.GIT1HUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/orgs/$ORGANIZATION/repos?type=all&per_page=100" > repos.json
          cat repos.json

      # Step 3: Get Contributors from the Last 15 Minutes
      - name: Get Contributions from the Last 15 Minutes
        id: get_contributions
        run: |
          ORGANIZATION="Actions-org"
          contributors_data="Member,Repository,Contributions\n"
          current_time=$(date +%s)  # Get current time in seconds

          REPOS=$(cat repos.json | jq -r '.[].name')

          for repo in $REPOS; do
            echo "Fetching commits for repository: $repo"
            
            # Get commits for the last 15 minutes
            COMMITS=$(curl -H "Authorization: token ${{ secrets.GIT1HUB_TOKEN }}" \
                            -H "Accept: application/vnd.github.v3+json" \
                            "https://api.github.com/repos/$ORGANIZATION/$repo/commits?since=$(date --date="15 minutes ago" --utc +%FT%TZ)")

            # Filter commits and collect contributors
            for commit in $(echo "$COMMITS" | jq -r '.[] | {author: .commit.author.name, date: .commit.author.date}'); do
              commit_date=$(echo $commit | jq -r '.date')
              author=$(echo $commit | jq -r '.author')

              # Check if the commit was made in the last 15 minutes
              commit_time=$(date -d "$commit_date" +%s)
              if ((current_time - commit_time <= 900)); then
                contributors_data+="$author,$repo,1\n"  # Add contributor data
              fi
            done
          done

          # Save the contributions data to CSV
          echo "$contributors_data" > contributions.csv

      # Step 4: Upload the CSV File as an Artifact
      - name: Upload Contributions CSV
        uses: actions/upload-artifact@v3
        with:
          name: contributions-csv
          path: contributions.csv

      # Optional: Show CSV contents for verification
      - name: Show CSV File
        run: |
          cat contributions.csv
